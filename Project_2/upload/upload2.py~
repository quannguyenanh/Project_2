import os
import subprocess
import zipfile

from flask import Flask, request, session, g, redirect, url_for, abort, render_template, flash
from werkzeug import secure_filename

UPLOAD_FOLDER = '/tmp/upload'
ALLOWED_EXTENSIONS = set(['txt', 'pdf', 'png', 'jpg', 'jpeg', 'gif', 'zip'])

app = Flask(__name__)
app.config.from_object(__name__)

app.config['UPLOAD_FOLDER'] = UPLOAD_FOLDER

def allowed_file(filename):
    return '.' in filename and \
           filename.rsplit('.', 1)[1] in ALLOWED_EXTENSIONS

def encrypt_file(encryptfile, password):    
    archive_file = encryptfile + '.zip'
    password_params = '-p' + password
    # create archive
    rc = subprocess.call(['7z', 'a', password_params, '-y', archive_file] + [encryptfile])
    
    return archive_file

def decrypt_file(encryptedfile, encryptfile, password):
    z = zipfile.ZipFile(encryptedfile)
    content = []
    try:
        f = z.open(encryptfile, 'r', pwd=password)    
        content = [i for i in f]
        return content
    except KeyError:
        print 'Error: Did not find %s in zip file' % encryptfile
    finally:
        z.close()

# create upload folder @ /tmp/upload
def create_uploadfolder():
    if os.path.isdir(app.config['UPLOAD_FOLDER']):
        pass
    else:
        rc = subprocess.call(['mkdir'] + [UPLOAD_FOLDER])

@app.route('/', methods=['GET', 'POST'])
def login():
    error = None
    if request.method =='POST':
        if request.form['username'] == '':
            error = 'Null username'
        elif request.form['password'] == '':
            error = 'Null password'
        else:
            return redirect(url_for('upload_file'))
    return render_template('login.html', error=error)

@app.route('/upload', methods=['GET', 'POST'])
def upload_file():
    # create upload folder
    create_uploadfolder()
    if request.method == 'POST':
        file = request.files['file']
        password = request.form['password'] # default password=PASSWORD
        if file and allowed_file(file.filename):
            filename = secure_filename(file.filename)
            if 'zip' in filename:
            # Allow download zip file to client
                return redirect(url_for('uploaded_file', filename=filename))
            else:
                fname = os.path.join(app.config['UPLOAD_FOLDER'], filename)
                archive_file = encrypt_file(fname, password)
                flash ('File was uploaded succesfully')
                return redirect(url_for('upload_file'))
    return '''
    <!doctype html>
    <div class=page>
  <h1>Flaskr</h1>
  <div class=metanav>
  {% if not session.logged_in %}
    <a href="{{ url_for('login') }}">log in</a>
  {% else %}
    <a href="{{ url_for('logout') }}">log out</a>
  {% endif %}
  </div>
  {% for message in get_flashed_messages() %}
    <div class=flash>{{ message }}</div>
  {% endfor %}
  {% block body %}{% endblock %}
</div>
    <title>Upload new File</title>    
    <h1>Upload new File</h1>
    <form action="" method=post enctype=multipart/form-data>
      <p><input type=file name=file>
         <input type=submit value=Upload>
    <form action="" method=post>
    <dl>      
      <dt>Password:
      <dt><input type=password name=password>     
    </dl>
    
    <h1>View File</h1>
    <form action="" method=post enctype=multipart/form-data>
      <p><input type=file name=file>
         <input type=submit value=View>
    <form action="" method=post>
    <dl>      
      <dt>Password:
      <dt><input type=password name=password>     
    </dl>
    </form>
    '''

from flask import send_from_directory

@app.route('/upload/<filename>')
def uploaded_file(filename):
    return send_from_directory(app.config['UPLOAD_FOLDER'],
                               filename)    

if __name__ == '__main__':
    app.run(debug=True)
